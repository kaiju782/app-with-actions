name: Build and Push Docker Image To AWS ECR
on:
  push:
    branches:
      - main
jobs:
  build-push-image:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
          
      - name: Make application.properties
        run: |
          mkdir -p ./src/main/resources
          cd ./src/main/resources
          touch ./application.properties
          echo "${{ secrets.PROPERTIES }}" > ./application.properties
        shell: bash
        
      - name: Build with Maven
        run: mvn -DskipTests -B package --file pom.xml
        
      - name: Naming jar file
        run: mv ./target/*.jar ./target/app.jar
  
      - name: Check jar file
        run: ls ./target
  
      - uses: actions/upload-artifact@v4
        with:
          name: app
          path: ./target/*.jar
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR (Private)
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ECR_PRIVATE_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
      - name: Create Short SHA
        run : echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.AWS_ECR_PRIVATE_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.AWS_ECR_PRIVATE_REPOSITORY }}:${{ env.SHORT_SHA }} .

      - name: Push Docker image to Amazon ECR
        run: |
          docker push ${{ secrets.AWS_ECR_PRIVATE_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.AWS_ECR_PRIVATE_REPOSITORY }}:${{ env.SHORT_SHA }}

      - name: ECR test
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            # 14-1. AWS CLI 설치 (EC2 내부에서)
            sudo apt-get update && sudo apt-get install -y awscli

            # 14-2. AWS Credentials 파일 생성 (Secrets 값 넣기)
            mkdir -p ~/.aws
            echo "[default]" > ~/.aws/credentials
            echo "aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}" >> ~/.aws/credentials
            echo "aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ~/.aws/credentials
            echo "region=ap-northeast-2" >> ~/.aws/credentials
            echo "output=json" >> ~/.aws/credentials
            chmod 755 ~/.aws/credentials

  
            # 14-3. ECR Login (EC2 내부에서)
            aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin 904570587382.dkr.ecr.ap-northeast-2.amazonaws.com
  
            # 14-4. ECR Docker 이미지 Pull (EC2 내부에서)
            docker pull 904570587382.dkr.ecr.ap-northeast-2.amazonaws.com/first-private-ecr:${{ env.SHORT_SHA }}
      

          
      
